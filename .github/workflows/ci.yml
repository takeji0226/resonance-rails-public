name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    # Rails起動時に必要なものはジョブ全体のenvで
    env:
      RAILS_ENV: test
      DEVISE_JWT_SECRET_KEY: ${{ secrets.DEVISE_JWT_SECRET_KEY }}
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips postgresql-client

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      # database.yml の test: database 名をERB評価込みで読み取り → 環境変数へ
      - name: Detect test DB name from config/database.yml
        run: |
          ruby -ryaml -rerb -e 'cfg = YAML.safe_load(ERB.new(File.read("config/database.yml")).result, aliases: true);
                                 db = (cfg["test"] && cfg["test"]["database"]) || "rails_test";
                                 puts "CI_TEST_DB_NAME=#{db}";
                                 File.open(ENV["GITHUB_ENV"], "a"){|f| f.puts "CI_TEST_DB_NAME=#{db}"}'

      # 読み取ったDB名で、postgres/postgres の資格情報を使う DATABASE_URL を付与して db:prepare
      - name: Prepare DB (test)
        env:
          DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:5432/${{ env.CI_TEST_DB_NAME }}
        run: bin/rails db:prepare

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:5432/${{ env.CI_TEST_DB_NAME }}
        run: bin/rails test test:system

      - name: Keep screenshots from failed system tests
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
